# ~/.config/tmux/tmux.conf

# plugin management system
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'

# security: change default prefix to reduce conflicts and add obscurity
unbind c-b
set -g prefix c-o
bind-key c-o send-prefix

# base configuration for consistent indexing
set -g base-index 1
set -g pane-base-index 1

# terminal and display settings for proper color support
set -s default-terminal screen-256color
set -ga terminal-overrides ,alacritty:RGB
set -g display-time 1000

# performance and behavior optimizations
set -g focus-events on
set -g history-limit 50000
set -s escape-time 0

# security: enable vi mode keys for consistent muscle memory
set -g mode-keys vi
set -g status-keys emacs

# user experience: enable mouse support
set -g mouse on

# visual styling with blue theme
set -g message-style bg=default,fg=blue
set -g pane-active-border-style fg=blue
set -g pane-border-style fg=colour242
set -g status-style bg=default,fg=blue

# status bar configuration with system information
set -g status-interval 1
set -g status-justify left
set -g status-left "⎡#S⎤ "
set -g status-right "⎡#{?#{!=:#{battery_percentage},},⚛ #{battery_percentage} │ ,}☉ %a %-m.%d │ ♁ %l:%M %p⎤"

# window status formatting
set -g window-status-current-format "#I:#W#{?window_zoomed_flag,*,}"
set -g window-status-current-style bg=blue,fg=black
set -g window-status-format "#I:#W#{?window_zoomed_flag,*,}"
set -g window-status-separator " "

# macos m1 compatibility check
if-shell \
  "sysctl -n machdep.cpu.brand_string | grep M1" \
  "set -g default-command \"arch -arm64 zsh\""

# layout management shortcuts
bind-key e select-layout even-horizontal
bind-key E select-layout even-vertical

# configuration reload shortcut
bind-key s source-file ~/.tmux.conf \; display "Sourced!"

# pane creation with current directory preservation
bind-key '"' split-window -c '#{pane_current_path}' -h
bind-key = split-window -c '#{pane_current_path}'

# buffer management
bind-key % choose-buffer

# window navigation with repeat capability
bind-key -r c-h select-window -t :-
bind-key -r c-l select-window -t :+

# pane swapping controls
bind-key -r c-k swap-pane -U
bind-key -r c-j swap-pane -D

# pane resizing with repeat capability
bind-key -r L resize-pane -R 5
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5

# copy mode configuration with custom clipboard integration
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel cpy
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel cpy
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel cpy

# vim-tmux navigator integration for seamless pane switching
# using jkl; ergonomic layout instead of hjkl
# detects vim processes and passes navigation commands accordingly
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?

# initialize plugin manager - must be last line
run -b '~/.tmux/plugins/tpm/tpm'"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -L"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -D"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -U"
bind-key -n 'M-;' if-shell "$is_vim" "send-keys M-;"  "select-pane -R"
bind-key -n 'M-\' if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# copy mode navigation consistency with jkl; layout
bind-key -T copy-mode-vi M-j select-pane -L
bind-key -T copy-mode-vi M-k select-pane -D
bind-key -T copy-mode-vi M-l select-pane -U
bind-key -T copy-mode-vi 'M-;' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# window switching with meta key - using home row positions
bind-key -n M-J select-window -t :-
bind-key -n 'M-:' select-window -t :+

# initialize plugin manager - must be last line
run -b '~/.tmux/plugins/tpm/tpm'