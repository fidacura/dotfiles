# ~/.curlrc

# user agent and privacy settings
user-agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
referer = ";auto"                    # send referer header when following redirects

# alternative user agents for security testing

# common desktop browsers
# user-agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"  # windows chrome
# user-agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0"  # windows firefox
# user-agent = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"  # linux chrome
# user-agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Safari/605.1.15"  # macos safari

# mobile browsers for mobile-specific vulnerabilities
# user-agent = "Mozilla/5.0 (iPhone; CPU iPhone OS 17_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Mobile/15E148 Safari/604.1"  # ios safari
# user-agent = "Mozilla/5.0 (Android 14; Mobile; rv:121.0) Gecko/121.0 Firefox/121.0"  # android firefox
# user-agent = "Mozilla/5.0 (Linux; Android 14; SM-G998B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Mobile Safari/537.36"  # android chrome

# older browsers for legacy vulnerability testing
# user-agent = "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko"  # internet explorer 11
# user-agent = "Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0"  # old firefox
# user-agent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"  # old chrome

# api and automation tools (might trigger different responses)
# user-agent = "curl/8.4.0"  # default curl user agent
# user-agent = "Wget/1.21.4"  # wget user agent
# user-agent = "python-requests/2.31.0"  # python requests library
# user-agent = "Postman/10.19.0"  # postman api client
# user-agent = "HTTPie/3.2.2"  # httpie command line client

# security scanners (use with caution - may trigger waf/ids)
# user-agent = "Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)"  # nmap
# user-agent = "sqlmap/1.7.11#stable (http://sqlmap.org)"  # sqlmap
# user-agent = "Burp Suite Professional"  # burp suite
# user-agent = "OWASP ZAP 2.14.0"  # owasp zap

# search engine crawlers (may access different content)
# user-agent = "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"  # googlebot
# user-agent = "Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"  # bingbot
# user-agent = "facebookexternalhit/1.1 (+http://www.facebook.com/externalhit_uatext.php)"  # facebook crawler

# minimal/unusual user agents for bypass testing
# user-agent = "a"  # minimal user agent
# user-agent = ""  # empty user agent (removes header entirely)
# user-agent = "<?xml version='1.0'?><user-agent>test</user-agent>"  # xml injection test
# user-agent = "'; DROP TABLE users; --"  # sql injection test (educational only)

# connection and timeout configuration
connect-timeout = 10                # connection timeout in seconds
max-time = 90                       # maximum time for entire operation
retry = 3                           # retry failed requests up to 3 times
retry-delay = 1                     # wait 1 second between retries
retry-max-time = 60                 # maximum time to spend on retries

# output and display settings
progress-bar                        # show progress bar instead of stats
show-error                          # show error messages
silent                              # suppress progress meter and error messages in scripts
location                            # follow redirects automatically
max-redirs = 10                     # maximum number of redirects to follow

# security and ssl settings
ssl-reqd                            # require ssl/tls for protocols that support it
proto = "=https,http"               # only allow https and http protocols
proto-redir = "=https,http"         # only allow https and http on redirects
tlsv1.2                             # minimum tls version 1.2

# certificate verification
cacert = ""                         # use system ca bundle (empty means default)
capath = ""                         # use system ca path (empty means default)

# compression and encoding
compressed                          # request compressed response
http2                               # use http/2 if available
http2-prior-knowledge               # use http/2 without upgrading from http/1.1

# network preferences
ipv4                                # prefer ipv4 connections
tcp-nodelay                         # disable nagle's algorithm for better performance
keepalive-time = 60                 # tcp keepalive probe interval

# header and cookie management
cookie-jar = "~/.curl-cookies"      # save cookies to file
location-trusted                    # send authentication to redirected hosts
netrc-optional                     # read .netrc if available but don't fail if missing

# debugging and development options (comment out for production use)
# verbose                           # show detailed request/response info
# trace-ascii = "~/.curl-trace"     # save detailed trace to file
# dump-header = "~/.curl-headers"   # save response headers to file

# bandwidth and rate limiting (uncomment if needed)
# limit-rate = 1M                   # limit download rate to 1MB/s
# max-filesize = 100M               # maximum file size to download

# proxy settings (uncomment and configure if using proxy)
# proxy = "http://proxy.example.com:8080"
# proxy-user = "username:password"
# proxy-ntlm                        # use ntlm authentication with proxy

# authentication settings
# anyauth                           # pick any authentication method curl supports
# digest                            # use digest authentication

# write output settings for better file handling
# write-out = "%{http_code} %{url_effective} %{time_total}s\n"  # custom output format

# fail fast on server errors
fail                                # fail silently on server errors (http 400+)

# disable problematic features for security
disable-epsv                        # disable extended passive mode for ftp
disable-eprt                        # disable extended port mode for ftp

# modern security defaults
ciphers = "HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA"